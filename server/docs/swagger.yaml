definitions:
  errors.APIError:
    properties:
      code:
        $ref: '#/definitions/errors.ErrorCode'
      details:
        type: string
      message:
        type: string
    type: object
  errors.ErrorCode:
    enum:
    - INVALID_REQUEST
    - UNAUTHORIZED
    - FORBIDDEN
    - NOT_FOUND
    - INTERNAL_ERROR
    - DATABASE_ERROR
    - VALIDATION_ERROR
    - TOKEN_GENERATION_ERROR
    - TOKEN_VERIFICATION_ERROR
    type: string
    x-enum-varnames:
    - ErrInvalidRequest
    - ErrUnauthorized
    - ErrForbidden
    - ErrNotFound
    - ErrInternal
    - ErrDatabase
    - ErrValidation
    - ErrTokenGeneration
    - ErrTokenVerification
  handlers.AgentInfo:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      image_url:
        type: string
      market_cap:
        type: number
      name:
        type: string
      ticker:
        type: string
      win_rate:
        type: number
      wins:
        type: integer
    type: object
  handlers.AgentRequest:
    properties:
      name:
        maxLength: 100
        type: string
      prompt:
        type: string
      ticker:
        maxLength: 50
        type: string
    required:
    - name
    - prompt
    - ticker
    type: object
  handlers.AgentResponse:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      image_url:
        type: string
      losses:
        description: 新增
        type: integer
      market_cap:
        type: number
      name:
        type: string
      prompt:
        type: string
      ticker:
        type: string
      token_address:
        type: string
      total:
        description: 新增
        type: integer
      user_wallet_address:
        type: string
      win_rate:
        description: 新增
        type: number
      wins:
        description: 新增
        type: integer
    type: object
  handlers.AgentsResponse:
    properties:
      agents:
        items:
          $ref: '#/definitions/handlers.AgentResponse'
        type: array
    type: object
  handlers.ConnectWalletRequest:
    properties:
      message:
        description: Message 签名消息（必填，用于验证 nonce）
        type: string
      signature:
        description: Signature 用户签名（必填）
        type: string
      username:
        description: Username 用户名（可选）
        maxLength: 50
        type: string
      wallet_address:
        description: WalletAddress 即公钥（必填）
        type: string
    required:
    - message
    - signature
    - wallet_address
    type: object
  handlers.ConnectWalletResponse:
    properties:
      message:
        description: Message 操作消息
        type: string
      token:
        description: Token JWT令牌
        type: string
      user:
        allOf:
        - $ref: '#/definitions/models.User'
        description: User 用户信息
    type: object
  handlers.GetProfileResponse:
    properties:
      user:
        allOf:
        - $ref: '#/definitions/models.User'
        description: User 用户信息
    type: object
  handlers.HealthCheckResponse:
    properties:
      status:
        description: Status 服务状态
        type: string
    type: object
  handlers.LeaderboardResponse:
    properties:
      leaderboard:
        items:
          $ref: '#/definitions/handlers.AgentInfo'
        type: array
    type: object
  models.User:
    properties:
      created_at:
        type: string
      id:
        type: integer
      updated_at:
        type: string
      username:
        type: string
      wallet_address:
        type: string
    type: object
host: localhost:9100
info:
  contact:
    email: support@yourwebsite.com
    name: API Support
    url: http://www.yourwebsite.com/support
  description: 这是一个使用Go、Gin、Gorm和PostgreSQL构建的Web后端项目，支持通过Phantom钱包连接用户，并实现了JWT认证。
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://your-terms-of-service-url.com
  title: Go Web Backend API
  version: "1.0"
paths:
  /api/agent:
    post:
      consumes:
      - application/json
      description: 玩家输入name, ticker, prompt，后端生成description和图片，并保存数据。
      parameters:
      - description: Agent请求体
        in: body
        name: agent
        required: true
        schema:
          $ref: '#/definitions/handlers.AgentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            $ref: '#/definitions/handlers.AgentResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - BearerAuth: []
      summary: 创建Agent
      tags:
      - Agent
  /api/agent/{id}:
    get:
      description: 根据 Agent ID 获取对应的 Agent 信息
      parameters:
      - description: Agent ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回 Agent
          schema:
            $ref: '#/definitions/handlers.AgentResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/errors.APIError'
        "404":
          description: 未找到
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: 获取指定 ID 的 Agent
      tags:
      - Agent
  /api/agents:
    get:
      description: 获取当前登录用户关联的所有Agent记录，并支持分页。
      parameters:
      - description: 页码(默认为1)
        in: query
        name: page
        type: integer
      - description: 每页大小(默认为4)
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回所有Agent(包含分页信息)
          schema:
            $ref: '#/definitions/handlers.AgentsResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - BearerAuth: []
      summary: 获取登录用户的所有Agents（分页）
      tags:
      - Agent
  /api/agents/all:
    get:
      description: 获取数据库中所有Agent记录，并支持分页。
      parameters:
      - description: 页码(默认为1)
        in: query
        name: page
        type: integer
      - description: 每页大小(默认为4)
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回所有Agent(包含分页信息)
          schema:
            $ref: '#/definitions/handlers.AgentsResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: 获取所有Agent（分页）
      tags:
      - Agent
  /api/connect_wallet:
    post:
      consumes:
      - application/json
      description: 用户通过Phantom钱包连接到系统，创建或更新用户信息，并返回JWT令牌。
      parameters:
      - description: 用户连接Phantom钱包请求体
        in: body
        name: connect_wallet
        required: true
        schema:
          $ref: '#/definitions/handlers.ConnectWalletRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 用户已连接
          schema:
            $ref: '#/definitions/handlers.ConnectWalletResponse'
        "201":
          description: 用户已创建
          schema:
            $ref: '#/definitions/handlers.ConnectWalletResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: 连接Phantom钱包
      tags:
      - 用户
  /api/health:
    get:
      consumes:
      - application/json
      description: 检查服务是否运行正常。
      produces:
      - application/json
      responses:
        "200":
          description: 服务正常
          schema:
            $ref: '#/definitions/handlers.HealthCheckResponse'
      summary: 健康检查
      tags:
      - 健康检查
  /api/leaderboard:
    get:
      description: 获取按照胜利次数、胜率和创建时间排序的前100名 Agent
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回排行榜
          schema:
            $ref: '#/definitions/handlers.LeaderboardResponse'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: 获取排行榜
      tags:
      - Agent
  /api/nonce:
    get:
      description: 生成一个随机的Nonce并存储到内存，返回给客户端（示例使用内存存储，实际可使用Redis等）
      produces:
      - application/json
      responses:
        "200":
          description: 返回一个包含nonce字段的JSON对象
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 生成随机Nonce
      tags:
      - 用户
  /api/profile:
    get:
      consumes:
      - application/json
      description: 获取当前认证用户的详细资料。
      produces:
      - application/json
      responses:
        "200":
          description: 用户资料
          schema:
            $ref: '#/definitions/handlers.GetProfileResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - BearerAuth: []
      summary: 获取用户资料
      tags:
      - 用户
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
